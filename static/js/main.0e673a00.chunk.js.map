{"version":3,"sources":["style/GlobalStyle.tsx","components/common/Button.ts","constants/index.ts","components/common/CategoryImage.tsx","components/common/Select.tsx","style/mixin.ts","components/Header.tsx","components/Modal.tsx","components/RestaurantDetail.tsx","components/RestaurantItem.tsx","domain/filterRestaurants.ts","components/RestaurantList.tsx","App.tsx","index.tsx"],"names":["GlobalStyle","createGlobalStyle","_templateObject","_taggedTemplateLiteral","Button","styled","button","CATEGORIES","SORTING_TYPES","CATEGORY_IMAGE_MAP","한식","일식","중식","양식","아시안","기타","CategoryImageWrapper","div","CategoryImage","_ref","category","React","createElement","src","concat","alt","Select","name","options","onChange","SelectWrapper","map","option","index","key","value","select","textSubtitle","textBody","Header","HeaderWrapper","Title","AddRestaurantButton","header","h1","_templateObject2","_templateObject3","Modal","children","closeModal","onKeyUp","_ref2","useEffect","window","addEventListener","removeEventListener","Fragment","ModalBackdrop","onClick","ModalContainer","RestaurantDetail","restaurant","distance","description","link","RestaurantDetailWrapper","RestaurantName","Distance","Description","Link","href","ButtonContainer","RemoveButton","CloseButton","h2","p","_templateObject4","a","_templateObject5","_templateObject6","_templateObject7","_templateObject8","RestaurantItem","id","ItemWrapper","RestaurantInfo","li","span","filterRestaurants","restaurants","sortingType","filteredRestaurants","filter","getSortingValue","sort","b","A","B","RestaurantList","openModal","_useState","useState","_useState2","_slicedToArray","setCategory","_useState3","_useState4","setSortingType","onChangeSelect","e","target","HTMLSelectElement","_e$target","FilterContainer","_toConsumableArray","RestaurantListContainer","HTMLElement","$li","closest","section","App","localStorage","getItem","setItem","JSON","stringify","mockData","parse","isModalOpen","setIsModalOpen","restaurantDetail","setRestaurantDetail","className","find","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"k3LA+BeA,EA7BKC,YAAiBC,MAAAC,YAAA,waCctBC,EAdAC,IAAOC,OAAMJ,MAAAC,YAAA,kMCAfI,EAAa,CAAC,eAAM,eAAM,eAAM,eAAM,qBAAO,gBAE7CC,EAAgB,CAAC,qBAAO,sBAExBC,EAA+C,CAC1DC,eAAI,sBACJC,eAAI,wBACJC,eAAI,uBACJC,eAAI,uBACJC,qBAAK,qBACLC,eAAI,oBCKAC,EAAuBX,IAAOY,IAAGf,MAAAC,YAAA,sSAoBxBe,EA1BO,SAAHC,GAAA,IAAMC,EAAQD,EAARC,SAAQ,OAC/BC,IAAAC,cAACN,EAAoB,KACnBK,IAAAC,cAAA,OAAKC,IAAG,SAAAC,OAAWf,EAAmBW,IAAaK,IAAKL,MCQ7CM,EAZA,SAAHP,GAA2C,IAArCQ,EAAIR,EAAJQ,KAAMC,EAAOT,EAAPS,QAASC,EAAQV,EAARU,SAC/B,OACER,IAAAC,cAACQ,EAAa,CAACH,KAAMA,EAAME,SAAUA,GAClCD,EAAQG,IAAI,SAACC,EAAQC,GAAK,OACzBZ,IAAAC,cAAA,UAAQY,IAAKD,EAAOE,MAAOH,GACxBA,OASLF,EAAgBzB,IAAO+B,OAAMlC,MAAAC,YAAA,0KCjBtBkC,EAAe,oEAMfC,EAAW,oECETC,EATA,WAAH,OACVlB,IAAAC,cAACkB,EAAa,KACZnB,IAAAC,cAACmB,EAAK,KAAC,oCACPpB,IAAAC,cAACoB,EAAmB,KAClBrB,IAAAC,cAAA,OAAKC,IAAI,uBAAuBE,IAAI,6BAOpCe,EAAgBnC,IAAOsC,OAAMzC,MAAAC,YAAA,2KAW7BsC,EAAQpC,IAAOuC,GAAEC,MAAA1C,YAAA,mCD3BE,qECgCnBuC,EAAsBrC,IAAOC,OAAMwC,MAAA3C,YAAA,+OCL1B4C,EApBD,SAAH5B,GAA2D,IAArD6B,EAAQ7B,EAAR6B,SAAUC,EAAU9B,EAAV8B,WACnBC,EAAU,SAAHC,GACC,WADQA,EAAHjB,KACKe,KAUxB,OAPAG,oBAAU,WAER,OADAC,OAAOC,iBAAiB,QAASJ,GAC1B,WACLG,OAAOE,oBAAoB,QAASL,KAErC,IAGD7B,IAAAC,cAAAD,IAAAmC,SAAA,KACEnC,IAAAC,cAACmC,EAAa,CAACC,QAAST,IACxB5B,IAAAC,cAACqC,EAAc,KAAEX,KAOjBS,EAAgBpD,IAAOY,IAAGf,MAAAC,YAAA,sHAU1BwD,EAAiBtD,IAAOY,IAAG4B,MAAA1C,YAAA,0JCRlByD,EAlBU,SAAHzC,GAA0C,IAApC0C,EAAU1C,EAAV0C,WAAYZ,EAAU9B,EAAV8B,WAC9B7B,EAAgDyC,EAAhDzC,SAAUO,EAAsCkC,EAAtClC,KAAMmC,EAAgCD,EAAhCC,SAAUC,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KAE/C,OACE3C,IAAAC,cAAC2C,EAAuB,KACtB5C,IAAAC,cAACJ,EAAa,CAACE,SAAUA,IACzBC,IAAAC,cAAC4C,EAAc,KAAEvC,GACjBN,IAAAC,cAAC6C,GAAQ,KAAC,kCAAOL,EAAS,iBAC1BzC,IAAAC,cAAC8C,GAAW,KAAEL,GACd1C,IAAAC,cAAC+C,GAAI,CAACC,KAAMN,GAAOA,GACnB3C,IAAAC,cAACiD,GAAe,KACdlD,IAAAC,cAACkD,GAAY,KAAC,4BACdnD,IAAAC,cAACmD,GAAW,CAACf,QAAST,GAAY,mBAQpCgB,EAA0B5D,IAAOY,IAAGf,MAAAC,YAAA,uIAUpC+D,EAAiB7D,IAAOqE,GAAE7B,MAAA1C,YAAA,yDAC5BkC,GAKE8B,GAAW9D,IAAOsE,EAAC7B,MAAA3C,YAAA,mCACrBmC,GAIE8B,GAAc/D,IAAOsE,EAACC,MAAAzE,YAAA,6FAQtBkE,GAAOhE,IAAOwE,EAACC,MAAA3E,YAAA,8CAKfoE,GAAkBlE,IAAOY,IAAG8D,MAAA5E,YAAA,gFAQ5BqE,GAAenE,YAAOD,EAAPC,CAAc2E,MAAA7E,YAAA,yGAO7BsE,GAAcpE,YAAOD,EAAPC,CAAc4E,MAAA9E,YAAA,QCvDnB+E,GAfQ,SAAH/D,GAA8B,IAAxB0C,EAAU1C,EAAV0C,WAChBsB,EAA8CtB,EAA9CsB,GAAIxD,EAA0CkC,EAA1ClC,KAAMP,EAAoCyC,EAApCzC,SAAU0C,EAA0BD,EAA1BC,SAAUC,EAAgBF,EAAhBE,YAEtC,OACE1C,IAAAC,cAAC8D,GAAW,CAACD,GAAIA,GACf9D,IAAAC,cAACJ,EAAa,CAACE,SAAUA,IACzBC,IAAAC,cAAC+D,GAAc,KACbhE,IAAAC,cAAA,UAAKK,GACLN,IAAAC,cAAC6C,GAAQ,KAAC,kCAAOL,EAAS,iBAC1BzC,IAAAC,cAAC8C,GAAW,KAAEL,MAQhBqB,GAAc/E,IAAOiF,GAAEpF,MAAAC,YAAA,6IAWvBkF,GAAiBhF,IAAOY,IAAG4B,MAAA1C,YAAA,8HAO3BkC,GAIA8B,GAAW9D,IAAOkF,KAAIzC,MAAA3C,YAAA,gDAExBmC,GAGE8B,GAAc/D,IAAOkF,KAAIX,MAAAzE,YAAA,gLAU3BmC,YCzCWkD,GAvBW,SACxBC,EACArE,EACAsE,GAEA,IAAMC,EACS,iBAAbvE,EACIqE,EACAA,EAAYG,OAAO,SAAC/B,GAAU,OAAKA,EAAWzC,WAAaA,IAE3DyE,EAAkB,SAAChC,GACvB,MAAuB,uBAAhB6B,EAAwB7B,EAAWlC,KAAOkC,EAAWC,UAG9D,OAAO6B,EAAoBG,KAAK,SAACjB,EAAGkB,GAClC,IAAMC,EAAIH,EAAgBhB,GACpBoB,EAAIJ,EAAgBE,GAC1B,OAAIC,EAAIC,EAAU,EACdD,EAAIC,GAAW,EACZ,KC8BIC,GArCQ,SAAH/E,GAA0C,IAApCsE,EAAWtE,EAAXsE,YAAaU,EAAShF,EAATgF,UAASC,EACdC,mBAA0B,gBAAKC,EAAAC,YAAAH,EAAA,GAAxDhF,EAAQkF,EAAA,GAAEE,EAAWF,EAAA,GAAAG,EACUJ,mBAAsB,sBAAMK,EAAAH,YAAAE,EAAA,GAA3Df,EAAWgB,EAAA,GAAEC,EAAcD,EAAA,GAC5Bf,EAAsBH,GAAkBC,EAAarE,EAAUsE,GAS/DkB,EAAiB,SAACC,GACtB,GAAMA,EAAEC,kBAAkBC,kBAA1B,CAAqD,IAAAC,EAC7BH,EAAEC,OAAlBnF,EAAIqF,EAAJrF,KAAMQ,EAAK6E,EAAL7E,MACD,aAATR,GAAqB6E,EAAYrE,GACxB,YAATR,GAAoBgF,EAAexE,KAGzC,OACEd,IAAAC,cAAA,YACED,IAAAC,cAAC2F,GAAe,KACd5F,IAAAC,cAACI,EAAM,CAACC,KAAK,WAAWC,QAAO,CAAG,gBAAIJ,OAAA0F,aAAK3G,IAAasB,SAAU+E,IAClEvF,IAAAC,cAACI,EAAM,CAACC,KAAK,UAAUC,QAASpB,EAAeqB,SAAU+E,KAG3DvF,IAAAC,cAAC6F,GAAuB,KACtB9F,IAAAC,cAAA,MAAIoC,QAtBc,SAACmD,GACvB,GAAMA,EAAEC,kBAAkBM,YAA1B,CAEA,IAAMC,EAAMR,EAAEC,OAAOQ,QAAQ,MACzBD,GAAKlB,EAAUkB,EAAIlC,OAmBhBQ,EAAoB5D,IAAI,SAAC8B,GAAU,OAClCxC,IAAAC,cAAC4D,GAAc,CAAChD,IAAK2B,EAAWsB,GAAItB,WAAYA,UAUtDoD,GAAkB5G,IAAOkH,QAAOrH,MAAAC,YAAA,0GAQhCgH,GAA0B9G,IAAOkH,QAAO1E,MAAA1C,YAAA,yGCtB/BqH,GAhCH,WACLC,aAAaC,QAAQ,gBACxBD,aAAaE,QAAQ,cAAeC,KAAKC,UAAUC,GAASrC,cAG9D,IAAMA,EAAcmC,KAAKG,MAAMN,aAAaC,QAAQ,gBAAkB,MAAsBtB,EACtDC,oBAAkB,GAAMC,EAAAC,YAAAH,EAAA,GAAvD4B,EAAW1B,EAAA,GAAE2B,EAAc3B,EAAA,GAAAG,EACcJ,mBAA4B,MAAKK,EAAAH,YAAAE,EAAA,GAA1EyB,EAAgBxB,EAAA,GAAEyB,EAAmBzB,EAAA,GAOtCzD,EAAa,WACjBgF,GAAe,IAGjB,OACE5G,IAAAC,cAAA,OAAK8G,UAAU,OACb/G,IAAAC,cAACiB,EAAM,MACPlB,IAAAC,cAAC4E,GAAc,CAACT,YAAaA,EAAaU,UAZ5B,SAAChB,GACjBgD,EAAoB1C,EAAY4C,KAAK,SAACxE,GAAU,OAAKA,EAAWsB,KAAOA,KACvE8C,GAAe,MAYZD,GAAeE,GACd7G,IAAAC,cAACyB,EAAK,CAACE,WAAYA,GACjB5B,IAAAC,cAACsC,EAAgB,CAACC,WAAYqE,EAAkBjF,WAAYA,OC3BzDqF,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHrH,IAAAC,cAACD,IAAMsH,WAAU,KACftH,IAAAC,cAACtB,EAAW,MACZqB,IAAAC,cAACkG,GAAG","file":"static/js/main.0e673a00.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n  }\n\n  ul,\n  li {\n    list-style: none;\n  }\n\n  html,\n  body {\n    font-family: sans-serif;\n    font-size: 16px;\n  }\n\n  :root {\n    --primary-color: #ec4a0a;\n    --lighten-color: #f6a88a;\n    --grey-100: #ffffff;\n    --grey-200: #d0d5dd;\n    --grey-300: #667085;\n    --grey-400: #344054;\n    --grey-500: #000000;\n  }\n`;\n\nexport default GlobalStyle;\n","import styled from 'styled-components';\n\nconst Button = styled.button`\n  width: 100%;\n  height: 44px;\n\n  border: none;\n  border-radius: 8px;\n\n  font-weight: 600;\n  cursor: pointer;\n\n  background: var(--primary-color);\n  color: var(--grey-100);\n`;\n\nexport default Button;\n","import { Category } from '../types/restaurant';\n\nexport const CATEGORIES = ['한식', '중식', '일식', '양식', '아시안', '기타'] as const;\nexport const DISTANCES = [5, 10, 15, 20, 30] as const;\nexport const SORTING_TYPES = ['이름순', '거리순'] as const;\n\nexport const CATEGORY_IMAGE_MAP: Record<Category, string> = {\n  한식: 'category-korean.png',\n  일식: 'category-japanese.png',\n  중식: 'category-chinese.png',\n  양식: 'category-western.png',\n  아시안: 'category-asian.png',\n  기타: 'category-etc.png'\n};\n","import { Category } from '../../types/restaurant';\n\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport { CATEGORY_IMAGE_MAP } from '../../constants';\n\ninterface Props {\n  category: Category;\n}\n\nconst CategoryImage = ({ category }: Props) => (\n  <CategoryImageWrapper>\n    <img src={`./img/${CATEGORY_IMAGE_MAP[category]}`} alt={category} />\n  </CategoryImageWrapper>\n);\n\nconst CategoryImageWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 64px;\n  height: 64px;\n  min-width: 64px;\n  min-height: 64px;\n\n  margin-right: 16px;\n\n  border-radius: 50%;\n  background: var(--lighten-color);\n\n  img {\n    width: 36px;\n    height: 36px;\n  }\n`;\n\nexport default CategoryImage;\n","import React, { ChangeEvent } from 'react';\nimport styled from 'styled-components';\n\ninterface Props {\n  name: string;\n  options: readonly string[];\n  onChange: (e: ChangeEvent) => void;\n}\n\nconst Select = ({ name, options, onChange }: Props) => {\n  return (\n    <SelectWrapper name={name} onChange={onChange}>\n      {options.map((option, index) => (\n        <option key={index} value={option}>\n          {option}\n        </option>\n      ))}\n    </SelectWrapper>\n  );\n};\n\nexport default Select;\n\nconst SelectWrapper = styled.select`\n  height: 44px;\n  min-width: 125px;\n\n  border: 1px solid #d0d5dd;\n  border-radius: 8px;\n  padding: 8px;\n\n  background: transparent;\n  font-size: 16px;\n`;\n","export const textTitle = /* css */ `\n  font-size: 20px;\n  line-height: 24px;\n  font-weight: 900;\n`;\n\nexport const textSubtitle = /* css */ `\n  font-size: 18px;\n  line-height: 28px;\n  font-weight: 600;\n`;\n\nexport const textBody = /* css */ `\n  font-size: 16px;\n  line-height: 24px;\n  font-weight: 400;\n`;\n\nexport const textCaption = /* css */ `\n  font-size: 14px;\n  line-height: 20px;\n  font-weight: 400;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { textTitle } from '../style/mixin';\n\nconst Header = () => (\n  <HeaderWrapper>\n    <Title>점심 뭐 먹지</Title>\n    <AddRestaurantButton>\n      <img src=\"./img/add-button.png\" alt=\"add-restaurant-button\" />\n    </AddRestaurantButton>\n  </HeaderWrapper>\n);\n\nexport default Header;\n\nconst HeaderWrapper = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 64px;\n\n  padding: 0 16px;\n\n  background-color: var(--primary-color);\n`;\n\nconst Title = styled.h1`\n  ${textTitle}\n  color: #fcfcfd;\n`;\n\nconst AddRestaurantButton = styled.button`\n  height: 40px;\n\n  border: none;\n  border-radius: 8px;\n  background: transparent;\n\n  font-size: 24px;\n  cursor: pointer;\n\n  img {\n    display: block;\n    width: 40px;\n    height: 40px;\n    object-fit: contain;\n  }\n`;\n","import React, { PropsWithChildren, useEffect } from 'react';\nimport styled from 'styled-components';\n\ninterface Props {\n  closeModal: () => void;\n}\n\nconst Modal = ({ children, closeModal }: PropsWithChildren<Props>) => {\n  const onKeyUp = ({ key }: KeyboardEvent) => {\n    if (key === 'Escape') closeModal();\n  };\n\n  useEffect(() => {\n    window.addEventListener('keyup', onKeyUp);\n    return () => {\n      window.removeEventListener('keyup', onKeyUp);\n    };\n  }, []);\n\n  return (\n    <>\n      <ModalBackdrop onClick={closeModal} />\n      <ModalContainer>{children}</ModalContainer>\n    </>\n  );\n};\n\nexport default Modal;\n\nconst ModalBackdrop = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n\n  background: rgba(0, 0, 0, 0.35);\n`;\n\nconst ModalContainer = styled.div`\n  position: fixed;\n  bottom: 0;\n  width: 100%;\n\n  padding: 32px 16px;\n\n  border-radius: 8px 8px 0px 0px;\n  background: var(--grey-100);\n`;\n","import { Restaurant } from '../types/restaurant';\n\nimport React from 'react';\nimport { Button, CategoryImage } from './';\nimport styled from 'styled-components';\n\nimport { textBody, textSubtitle } from '../style/mixin';\n\ninterface Props {\n  restaurant: Restaurant;\n  closeModal: () => void;\n}\n\nconst RestaurantDetail = ({ restaurant, closeModal }: Props) => {\n  const { category, name, distance, description, link } = restaurant;\n\n  return (\n    <RestaurantDetailWrapper>\n      <CategoryImage category={category} />\n      <RestaurantName>{name}</RestaurantName>\n      <Distance>캠퍼스부터 {distance}분 내</Distance>\n      <Description>{description}</Description>\n      <Link href={link}>{link}</Link>\n      <ButtonContainer>\n        <RemoveButton>삭제하기</RemoveButton>\n        <CloseButton onClick={closeModal}>닫기</CloseButton>\n      </ButtonContainer>\n    </RestaurantDetailWrapper>\n  );\n};\n\nexport default RestaurantDetail;\n\nconst RestaurantDetailWrapper = styled.div`\n  position: relative;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  height: 508px;\n`;\n\nconst RestaurantName = styled.h2`\n  ${textSubtitle}\n  font-weight: 600;\n  font-size: 20px;\n`;\n\nconst Distance = styled.p`\n  ${textBody}\n  color: #ec4a0a;\n`;\n\nconst Description = styled.p`\n  height: 240px;\n\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 150%;\n`;\n\nconst Link = styled.a`\n  height: 24px;\n  color: #000000;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n\n  button + button {\n    margin-left: 16px;\n  }\n`;\n\nconst RemoveButton = styled(Button)`\n  border: 1px solid var(--grey-300);\n\n  background: transparent;\n  color: var(--grey-300);\n`;\n\nconst CloseButton = styled(Button)``;\n","import { Restaurant } from '../types/restaurant';\n\nimport React from 'react';\nimport { CategoryImage } from './';\nimport styled from 'styled-components';\n\nimport { textBody, textSubtitle } from '../style/mixin';\n\ninterface Props {\n  restaurant: Restaurant;\n}\n\nconst RestaurantItem = ({ restaurant }: Props) => {\n  const { id, name, category, distance, description } = restaurant;\n\n  return (\n    <ItemWrapper id={id}>\n      <CategoryImage category={category} />\n      <RestaurantInfo>\n        <h3>{name}</h3>\n        <Distance>캠퍼스부터 {distance}분 내</Distance>\n        <Description>{description}</Description>\n      </RestaurantInfo>\n    </ItemWrapper>\n  );\n};\n\nexport default RestaurantItem;\n\nconst ItemWrapper = styled.li`\n  display: flex;\n  align-items: flex-start;\n\n  padding: 16px 8px;\n\n  border-bottom: 1px solid #e9eaed;\n\n  cursor: pointer;\n`;\n\nconst RestaurantInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n\n  h3 {\n    margin: 0;\n    ${textSubtitle}\n  }\n`;\n\nconst Distance = styled.span`\n  color: var(--primary-color);\n  ${textBody}\n`;\n\nconst Description = styled.span`\n  display: -webkit-box;\n\n  padding-top: 8px;\n\n  overflow: hidden;\n  text-overflow: ellipsis;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n\n  ${textBody}\n`;\n","import { Category, Restaurant, SortingType } from '../types/restaurant';\n\nconst filterRestaurants = (\n  restaurants: Restaurant[],\n  category: Category | '전체',\n  sortingType: SortingType\n) => {\n  const filteredRestaurants =\n    category === '전체'\n      ? restaurants\n      : restaurants.filter((restaurant) => restaurant.category === category);\n\n  const getSortingValue = (restaurant: Restaurant) => {\n    return sortingType === '이름순' ? restaurant.name : restaurant.distance;\n  };\n\n  return filteredRestaurants.sort((a, b) => {\n    const A = getSortingValue(a);\n    const B = getSortingValue(b);\n    if (A > B) return 1;\n    if (A < B) return -1;\n    return 0;\n  });\n};\n\nexport default filterRestaurants;\n","import { Category, Restaurant, SortingType } from '../types/restaurant';\n\nimport React, { MouseEvent, ChangeEvent, useState } from 'react';\nimport { Select, RestaurantItem } from './';\nimport styled from 'styled-components';\n\nimport filterRestaurants from '../domain/filterRestaurants';\nimport { CATEGORIES, SORTING_TYPES } from '../constants';\n\ninterface Props {\n  restaurants: Restaurant[];\n  openModal: (id: Restaurant['id']) => void;\n}\n\nconst RestaurantList = ({ restaurants, openModal }: Props) => {\n  const [category, setCategory] = useState<Category | '전체'>('전체');\n  const [sortingType, setSortingType] = useState<SortingType>('이름순');\n  const filteredRestaurants = filterRestaurants(restaurants, category, sortingType);\n\n  const openDetailModal = (e: MouseEvent) => {\n    if (!(e.target instanceof HTMLElement)) return;\n\n    const $li = e.target.closest('li');\n    if ($li) openModal($li.id as Restaurant['id']);\n  };\n\n  const onChangeSelect = (e: ChangeEvent) => {\n    if (!(e.target instanceof HTMLSelectElement)) return;\n    const { name, value } = e.target;\n    if (name === 'category') setCategory(value as Category);\n    if (name === 'sorting') setSortingType(value as SortingType);\n  };\n\n  return (\n    <main>\n      <FilterContainer>\n        <Select name=\"category\" options={['전체', ...CATEGORIES]} onChange={onChangeSelect} />\n        <Select name=\"sorting\" options={SORTING_TYPES} onChange={onChangeSelect} />\n      </FilterContainer>\n\n      <RestaurantListContainer>\n        <ul onClick={openDetailModal}>\n          {filteredRestaurants.map((restaurant) => (\n            <RestaurantItem key={restaurant.id} restaurant={restaurant} />\n          ))}\n        </ul>\n      </RestaurantListContainer>\n    </main>\n  );\n};\n\nexport default RestaurantList;\n\nconst FilterContainer = styled.section`\n  display: flex;\n  justify-content: space-between;\n\n  margin-top: 24px;\n  padding: 0 16px;\n`;\n\nconst RestaurantListContainer = styled.section`\n  display: flex;\n  flex-direction: column;\n\n  margin: 16px 0;\n  padding: 0 16px;\n`;\n","import { Restaurant } from './types/restaurant';\n\nimport React, { useState } from 'react';\nimport { Header, RestaurantList, Modal, RestaurantDetail } from './components';\n\nimport mockData from './mockData.json';\n\nconst App = () => {\n  if (!localStorage.getItem('restaurants')) {\n    localStorage.setItem('restaurants', JSON.stringify(mockData.restaurants));\n  }\n\n  const restaurants = JSON.parse(localStorage.getItem('restaurants') || '[]') as Restaurant[];\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\n  const [restaurantDetail, setRestaurantDetail] = useState<Restaurant | null>(null);\n\n  const openModal = (id: Restaurant['id']) => {\n    setRestaurantDetail(restaurants.find((restaurant) => restaurant.id === id) as Restaurant);\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <RestaurantList restaurants={restaurants} openModal={openModal} />\n\n      {isModalOpen && restaurantDetail && (\n        <Modal closeModal={closeModal}>\n          <RestaurantDetail restaurant={restaurantDetail} closeModal={closeModal} />\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport GlobalStyle from './style/GlobalStyle';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root') as HTMLElement);\nroot.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}